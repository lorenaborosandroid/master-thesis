// Code generated by moshi-kotlin-codegen. Do not edit.
package com.mediconear.patientlib.model

import com.mediconear.sessionlib.model.User
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class ApiPatientResponseJsonAdapter(
  moshi: Moshi
) : JsonAdapter<ApiPatientResponse>() {
  private val options: JsonReader.Options = JsonReader.Options.of("pacijent_id", "mbo", "korisnik")

  private val intAdapter: JsonAdapter<Int> = moshi.adapter(Int::class.java, emptySet(), "patientId")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "mbo")

  private val userAdapter: JsonAdapter<User> = moshi.adapter(User::class.java, emptySet(), "user")

  override fun toString(): String = buildString(40) {
      append("GeneratedJsonAdapter(").append("ApiPatientResponse").append(')') }

  override fun fromJson(reader: JsonReader): ApiPatientResponse {
    var patientId: Int? = null
    var mbo: String? = null
    var user: User? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> patientId = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("patientId",
            "pacijent_id", reader)
        1 -> mbo = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("mbo", "mbo", reader)
        2 -> user = userAdapter.fromJson(reader) ?: throw Util.unexpectedNull("user", "korisnik",
            reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return ApiPatientResponse(
        patientId = patientId ?: throw Util.missingProperty("patientId", "pacijent_id", reader),
        mbo = mbo ?: throw Util.missingProperty("mbo", "mbo", reader),
        user = user ?: throw Util.missingProperty("user", "korisnik", reader)
    )
  }

  override fun toJson(writer: JsonWriter, value: ApiPatientResponse?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("pacijent_id")
    intAdapter.toJson(writer, value.patientId)
    writer.name("mbo")
    stringAdapter.toJson(writer, value.mbo)
    writer.name("korisnik")
    userAdapter.toJson(writer, value.user)
    writer.endObject()
  }
}
